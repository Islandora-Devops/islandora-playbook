---

- name: bootstrap
  hosts: all
  become: yes
  gather_facts: false

  tasks:
    # python isn't installed by default on ubuntu so we need
    # to do that with the raw command before
    - name: install python
      raw: test -e /usr/bin/python || (apt-get update; apt-get install -y python3;)
      register: output
      changed_when:
        - output.stdout != ""
        - output.stdout != "\r\n"
      when: islandora_distro|default('') is match("ubuntu/")

    # Manually gather facts once python is installed
    - name: gather facts
      setup:

    # Include OS specific variables (like PHP stuff)
    - name: include OS specific variables
      include_vars: "vars/{{ ansible_os_family }}.yml"

    # also need to make sure aptitude is installed for the apt
    # commands in ansible.
    - name: install aptitude
      apt:
        name: aptitude
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    # install some packages we would like on every server
    - name: install extra packages ubuntu
      package:
        name: "{{ item }}"
        state: present
      with_items: "{{ islandora_extra_ubuntu_packages }}"
      when: ansible_os_family == "Debian"

    # install some packages we would like on every server
    - name: install extra packages centos
      package:
        name: "{{ item }}"
        state: present
      with_items: "{{ islandora_extra_centos_packages }}"
      when: ansible_os_family == "RedHat"

    # Check Selinux
    - name: check selinux status
      raw: sestatus
      register: sestatus_out
      when: ansible_os_family == "RedHat"

    # Parse sestatus down to one of two options.
    - name: Set selinux permissive fact
      set_fact:
        selinux_permissive: "{{ sestatus_out.stdout|regex_search('Current mode.*(permissive|enforcing)')|regex_search('(permissive|enforcing)') }}"
      when: ansible_os_family == "RedHat"

    # Change Selinux to permissive
    - name: change selinux enforcement to permissive
      command: setenforce permissive
      when: ansible_os_family == "RedHat" and disable_selinux and selinux_permissive == "enforcing"

    # Check if we may be re-running
    - name: Check for possible re-run
      stat:
        path: "{{ drupal_composer_install_dir }}/web/sites/default/"
      register: defaultdir_exists
   
    # if we are re-running, change the perms on the default dir so composer 
    # doesn't error out.   
    - name: Set writable perms on the default/ directory 
      file: 
        path: "{{ drupal_composer_install_dir }}/web/sites/default/"
        mode: u+rw
        recurse: yes
        owner: "{{ ansible_user }}"
      when:  defaultdir_exists.stat.exists == true
      become: yes

    - name: populate /etc/environment
      lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value}}"
      with_items: "{{ os_environment }}"

    # Include install profile-specific variables
    - name: include Drupal install profile specific variables
      include_vars: "vars/{{ islandora_profile }}.yml"
